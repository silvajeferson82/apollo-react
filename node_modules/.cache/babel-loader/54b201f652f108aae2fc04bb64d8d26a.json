{"ast":null,"code":"import _objectSpread from \"/Users/diretotech/Desktop/apollo-react-6.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/diretotech/Desktop/apollo-react-6.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/diretotech/Desktop/apollo-react-6.0.0/src/pages/CalendarDemo.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button } from 'primereact/button';\nimport { FullCalendar } from 'primereact/fullcalendar';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport { Checkbox } from 'primereact/checkbox';\nimport { Calendar as PRCalendar } from 'primereact/calendar';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport EventService from '../service/EventService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var CalendarDemo = function CalendarDemo() {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      eventDialog = _useState2[0],\n      setEventDialog = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      clickedEvent = _useState4[0],\n      setClickedEvent = _useState4[1];\n\n  var _useState5 = useState({\n    title: '',\n    start: null,\n    end: null,\n    allDay: null\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      changedEvent = _useState6[0],\n      setChangedEvent = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      events = _useState8[0],\n      setEvents = _useState8[1];\n\n  var options = {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    defaultDate: '2019-01-01',\n    header: {\n      left: 'prev,next',\n      center: 'title',\n      right: 'dayGridMonth,timeGridWeek,timeGridDay'\n    },\n    editable: true,\n    eventClick: function eventClick(e) {\n      var _e$event = e.event,\n          title = _e$event.title,\n          start = _e$event.start,\n          end = _e$event.end;\n      setEventDialog(true);\n      setClickedEvent(e.event);\n      setChangedEvent({\n        title: title,\n        start: start,\n        end: end,\n        allDay: null\n      });\n    }\n  };\n  useEffect(function () {\n    var eventService = new EventService();\n    eventService.getEvents().then(function (data) {\n      return setEvents(data);\n    });\n  }, []);\n\n  var save = function save() {\n    setEventDialog(false);\n    clickedEvent.setProp('title', changedEvent.title);\n    clickedEvent.setStart(changedEvent.start);\n    clickedEvent.setEnd(changedEvent.end);\n    clickedEvent.setAllDay(changedEvent.allDay);\n    setChangedEvent({\n      title: '',\n      start: null,\n      end: '',\n      allDay: null\n    });\n  };\n\n  var reset = function reset() {\n    var title = clickedEvent.title,\n        start = clickedEvent.start,\n        end = clickedEvent.end;\n    setChangedEvent({\n      title: title,\n      start: start,\n      end: end,\n      allDay: null\n    });\n  };\n\n  var footer = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      label: \"Save\",\n      icon: \"pi pi-check\",\n      className: \"p-button-text\",\n      onClick: save\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      label: \"Reset\",\n      icon: \"pi pi-refresh\",\n      className: \"p-button-text\",\n      onClick: reset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-grid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(FullCalendar, {\n          events: events,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Dialog, {\n          visible: eventDialog && !!clickedEvent,\n          style: {\n            width: '450px'\n          },\n          header: \"Event Details\",\n          footer: footer,\n          modal: true,\n          closable: true,\n          onHide: function onHide() {\n            return setEventDialog(false);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-fluid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"title\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(InputText, {\n                id: \"title\",\n                value: changedEvent.title,\n                onChange: function onChange(e) {\n                  return setChangedEvent(_objectSpread(_objectSpread({}, changedEvent), {\n                    title: e.target.value\n                  }));\n                },\n                required: true,\n                autoFocus: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"start\",\n                children: \"From\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(PRCalendar, {\n                id: \"start\",\n                value: changedEvent.start,\n                onChange: function onChange(e) {\n                  return setChangedEvent(_objectSpread(_objectSpread({}, changedEvent), {\n                    start: e.value\n                  }));\n                },\n                showTime: true,\n                appendTo: document.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-field\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"end\",\n                children: \"To\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(PRCalendar, {\n                id: \"end\",\n                value: changedEvent.end,\n                onChange: function onChange(e) {\n                  return setChangedEvent(_objectSpread(_objectSpread({}, changedEvent), {\n                    end: e.value\n                  }));\n                },\n                showTime: true,\n                appendTo: document.body\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-field-checkbox\",\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                inputId: \"allday\",\n                name: \"allday\",\n                value: \"All Day\",\n                checked: !!changedEvent.allDay,\n                onChange: function onChange(e) {\n                  return setChangedEvent(_objectSpread(_objectSpread({}, changedEvent), {\n                    allDay: e.value\n                  }));\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"allday\",\n                children: \"All Day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CalendarDemo, \"Pwfeb7t0/XbYKCrBMNY0NJpn9Tw=\");\n\n_c = CalendarDemo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarDemo\");","map":{"version":3,"sources":["/Users/diretotech/Desktop/apollo-react-6.0.0/src/pages/CalendarDemo.js"],"names":["React","useEffect","useState","Button","FullCalendar","Dialog","InputText","Checkbox","Calendar","PRCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","EventService","CalendarDemo","eventDialog","setEventDialog","clickedEvent","setClickedEvent","title","start","end","allDay","changedEvent","setChangedEvent","events","setEvents","options","plugins","defaultDate","header","left","center","right","editable","eventClick","e","event","eventService","getEvents","then","data","save","setProp","setStart","setEnd","setAllDay","reset","footer","width","target","value","document","body"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button } from 'primereact/button';\nimport { FullCalendar } from 'primereact/fullcalendar';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport { Checkbox } from 'primereact/checkbox';\nimport { Calendar as PRCalendar } from 'primereact/calendar';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport EventService from '../service/EventService';\n\nexport const CalendarDemo = () => {\n\n    const [eventDialog, setEventDialog] = useState(false);\n    const [clickedEvent, setClickedEvent] = useState(null);\n    const [changedEvent, setChangedEvent] = useState({ title: '', start: null, end: null, allDay: null });\n    const [events, setEvents] = useState(null);\n\n    const options = {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        defaultDate: '2019-01-01',\n        header: {\n            left: 'prev,next',\n            center: 'title',\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\n        },\n        editable: true,\n        eventClick: (e) => {\n            const { title, start, end } = e.event;\n            setEventDialog(true);\n            setClickedEvent(e.event);\n            setChangedEvent({ title, start, end, allDay: null });\n        }\n    };\n\n    useEffect(() => {\n        const eventService = new EventService();\n        eventService.getEvents().then(data => setEvents(data));\n    }, [])\n\n    const save = () => {\n        setEventDialog(false);\n\n        clickedEvent.setProp('title', changedEvent.title)\n        clickedEvent.setStart(changedEvent.start)\n        clickedEvent.setEnd(changedEvent.end)\n        clickedEvent.setAllDay(changedEvent.allDay)\n\n        setChangedEvent({ title: '', start: null, end: '', allDay: null });\n    };\n\n    const reset = () => {\n        const { title, start, end } = clickedEvent;\n        setChangedEvent({ title, start, end, allDay: null });\n    };\n\n    const footer = (\n        <>\n            <Button type=\"button\" label=\"Save\" icon=\"pi pi-check\" className=\"p-button-text\" onClick={save} />\n            <Button type=\"button\" label=\"Reset\" icon=\"pi pi-refresh\" className=\"p-button-text\" onClick={reset} />\n        </>\n    );\n\n    return (\n        <div className=\"p-grid\">\n            <div className=\"p-col-12\">\n                <div className=\"card\">\n                    <FullCalendar events={events} options={options} />\n\n                    <Dialog visible={eventDialog && !!clickedEvent} style={{ width: '450px' }} header=\"Event Details\" footer={footer} modal closable onHide={() => setEventDialog(false)}>\n                        <div className=\"p-fluid\">\n                            <div className=\"p-field\">\n                                <label htmlFor=\"title\">Title</label>\n                                <InputText id=\"title\" value={changedEvent.title} onChange={(e) => setChangedEvent({ ...changedEvent, ...{ title: e.target.value } })} required autoFocus />\n                            </div>\n                            <div className=\"p-field\">\n                                <label htmlFor=\"start\">From</label>\n                                <PRCalendar id=\"start\" value={changedEvent.start} onChange={(e) => setChangedEvent({ ...changedEvent, ...{ start: e.value } })} showTime appendTo={document.body} />\n                            </div>\n                            <div className=\"p-field\">\n                                <label htmlFor=\"end\">To</label>\n                                <PRCalendar id=\"end\" value={changedEvent.end} onChange={(e) => setChangedEvent({ ...changedEvent, ...{ end: e.value } })} showTime appendTo={document.body} />\n                            </div>\n                            <div className=\"p-field-checkbox\">\n                                <Checkbox inputId=\"allday\" name=\"allday\" value=\"All Day\" checked={!!changedEvent.allDay} onChange={(e) => setChangedEvent({ ...changedEvent, ...{ allDay: e.value } })} />\n                                <label htmlFor=\"allday\">All Day</label>\n                            </div>\n                        </div>\n                    </Dialog>\n                </div>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}