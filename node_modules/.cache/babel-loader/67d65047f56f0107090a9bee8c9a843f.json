{"ast":null,"code":"import _slicedToArray from \"/Users/diretotech/Desktop/apollo-react-6.0.0/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/diretotech/Desktop/apollo-react-6.0.0/src/components/TreeDemo.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Tree } from 'primereact/tree';\nimport { TreeTable } from 'primereact/treetable';\nimport { Column } from 'primereact/column';\nimport NodeService from '../service/NodeService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var TreeDemo = function TreeDemo() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      treeNodes = _useState2[0],\n      setTreeNodes = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedTreeNodeKeys = _useState4[0],\n      setSelectedTreeNodeKeys = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      treeTableNodes = _useState6[0],\n      setTreeTableNodes = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedTreeTableNodeKeys = _useState8[0],\n      setSelectedTreeTableNodeKeys = _useState8[1];\n\n  useEffect(function () {\n    var nodeService = new NodeService();\n    nodeService.getTreeNodes().then(function (data) {\n      return setTreeNodes(data);\n    });\n    nodeService.getTreeTableNodes().then(function (data) {\n      return setTreeTableNodes(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Tree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Tree, {\n          value: treeNodes,\n          selectionMode: \"checkbox\",\n          selectionKeys: selectedTreeNodeKeys,\n          onSelectionChange: function onSelectionChange(e) {\n            return setSelectedTreeNodeKeys(e.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"TreeTable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(TreeTable, {\n          value: treeTableNodes,\n          header: \"FileSystem\",\n          selectionMode: \"checkbox\",\n          selectionKeys: selectedTreeTableNodeKeys,\n          onSelectionChange: function onSelectionChange(e) {\n            return setSelectedTreeTableNodeKeys(e.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(Column, {\n            field: \"name\",\n            header: \"Name\",\n            expander: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"size\",\n            header: \"Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Column, {\n            field: \"type\",\n            header: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(TreeDemo, \"4y8kYQj6Dw0n/qRRYPP+e10kpiQ=\");\n\n_c = TreeDemo;\n\nvar _c;\n\n$RefreshReg$(_c, \"TreeDemo\");","map":{"version":3,"sources":["/Users/diretotech/Desktop/apollo-react-6.0.0/src/components/TreeDemo.js"],"names":["React","useState","useEffect","Tree","TreeTable","Column","NodeService","TreeDemo","treeNodes","setTreeNodes","selectedTreeNodeKeys","setSelectedTreeNodeKeys","treeTableNodes","setTreeTableNodes","selectedTreeTableNodeKeys","setSelectedTreeTableNodeKeys","nodeService","getTreeNodes","then","data","getTreeTableNodes","e","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA;;AAE1B,kBAAkCN,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOO,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAwDR,QAAQ,CAAC,IAAD,CAAhE;AAAA;AAAA,MAAOS,oBAAP;AAAA,MAA6BC,uBAA7B;;AACA,mBAA4CV,QAAQ,CAAC,EAAD,CAApD;AAAA;AAAA,MAAOW,cAAP;AAAA,MAAuBC,iBAAvB;;AACA,mBAAkEZ,QAAQ,CAAC,EAAD,CAA1E;AAAA;AAAA,MAAOa,yBAAP;AAAA,MAAkCC,4BAAlC;;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMc,WAAW,GAAG,IAAIV,WAAJ,EAApB;AACAU,IAAAA,WAAW,CAACC,YAAZ,GAA2BC,IAA3B,CAAgC,UAAAC,IAAI;AAAA,aAAIV,YAAY,CAACU,IAAD,CAAhB;AAAA,KAApC;AACAH,IAAAA,WAAW,CAACI,iBAAZ,GAAgCF,IAAhC,CAAqC,UAAAC,IAAI;AAAA,aAAIN,iBAAiB,CAACM,IAAD,CAArB;AAAA,KAAzC;AACH,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEX,SAAb;AAAwB,UAAA,aAAa,EAAC,UAAtC;AAAiD,UAAA,aAAa,EAAEE,oBAAhE;AAAsF,UAAA,iBAAiB,EAAE,2BAACW,CAAD;AAAA,mBAAOV,uBAAuB,CAACU,CAAC,CAACC,KAAH,CAA9B;AAAA;AAAzG;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aADJ,eAOI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,QAAC,SAAD;AAAW,UAAA,KAAK,EAAEV,cAAlB;AAAkC,UAAA,MAAM,EAAC,YAAzC;AAAsD,UAAA,aAAa,EAAC,UAApE;AAA+E,UAAA,aAAa,EAAEE,yBAA9F;AAAyH,UAAA,iBAAiB,EAAE,2BAACO,CAAD;AAAA,mBAAON,4BAA4B,CAACM,CAAC,CAACC,KAAH,CAAnC;AAAA,WAA5I;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAqB,YAAA,MAAM,EAAC,MAA5B;AAAmC,YAAA,QAAQ;AAA3C;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAqB,YAAA,MAAM,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,mBAFJ,eAGI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAqB,YAAA,MAAM,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,mBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAoBH,CAjCM;;GAAMf,Q;;KAAAA,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Tree } from 'primereact/tree';\nimport { TreeTable } from 'primereact/treetable';\nimport { Column } from 'primereact/column';\nimport NodeService from '../service/NodeService';\n\nexport const TreeDemo = () => {\n\n    const [treeNodes, setTreeNodes] = useState([]);\n    const [selectedTreeNodeKeys, setSelectedTreeNodeKeys] = useState(null);\n    const [treeTableNodes, setTreeTableNodes] = useState([]);\n    const [selectedTreeTableNodeKeys, setSelectedTreeTableNodeKeys] = useState([]);\n\n    useEffect(() => {\n        const nodeService = new NodeService();\n        nodeService.getTreeNodes().then(data => setTreeNodes(data));\n        nodeService.getTreeTableNodes().then(data => setTreeTableNodes(data));\n    }, []);\n\n    return (\n        <div className=\"p-grid\">\n            <div className=\"p-col-12\">\n                <div className=\"card\">\n                    <h5>Tree</h5>\n                    <Tree value={treeNodes} selectionMode=\"checkbox\" selectionKeys={selectedTreeNodeKeys} onSelectionChange={(e) => setSelectedTreeNodeKeys(e.value)}></Tree>\n                </div>\n            </div>\n            <div className=\"p-col-12\">\n                <div className=\"card\">\n                    <h5>TreeTable</h5>\n                    <TreeTable value={treeTableNodes} header=\"FileSystem\" selectionMode=\"checkbox\" selectionKeys={selectedTreeTableNodeKeys} onSelectionChange={(e) => setSelectedTreeTableNodeKeys(e.value)}>\n                        <Column field=\"name\" header=\"Name\" expander></Column>\n                        <Column field=\"size\" header=\"Size\"></Column>\n                        <Column field=\"type\" header=\"Type\"></Column>\n                    </TreeTable>\n                </div>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}